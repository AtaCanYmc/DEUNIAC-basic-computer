/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Input")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Input[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("IR_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR_out[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("IR_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR_out";
}

SIGNAL("OUTR_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OUTR_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTR_out";
}

SIGNAL("OUTR_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTR_out";
}

SIGNAL("OUTR_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTR_out";
}

SIGNAL("OUTR_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OUTR_out";
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LD_AR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LD_Rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R0_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R0_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_out";
}

SIGNAL("R0_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_out";
}

SIGNAL("R0_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_out";
}

SIGNAL("R0_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R0_out";
}

SIGNAL("R1_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R1_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_out";
}

SIGNAL("R1_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_out";
}

SIGNAL("R1_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_out";
}

SIGNAL("R1_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R1_out";
}

SIGNAL("R2_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R2_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R2_out";
}

SIGNAL("R2_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R2_out";
}

SIGNAL("R2_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R2_out";
}

SIGNAL("R2_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R2_out";
}

SIGNAL("LD_IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LD_PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_out";
}

SIGNAL("PC_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_out";
}

SIGNAL("PC_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_out";
}

SIGNAL("PC_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_out";
}

SIGNAL("PC_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_out";
}

SIGNAL("S1S2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S1S2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1S2";
}

SIGNAL("S1S2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1S2";
}

SIGNAL("S1S2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1S2";
}

SIGNAL("S1S2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1S2";
}

SIGNAL("DM_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DM_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DM_out";
}

SIGNAL("DM_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DM_out";
}

SIGNAL("DM_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DM_out";
}

SIGNAL("DM_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DM_out";
}

SIGNAL("DM_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DM_out";
}

SIGNAL("Rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Rd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Rd";
}

SIGNAL("Rd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Rd";
}

SIGNAL("SC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SC";
}

SIGNAL("SC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SC";
}

SIGNAL("SC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SC";
}

SIGNAL("SM_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SM_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SM_out";
}

SIGNAL("SM_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SM_out";
}

SIGNAL("SM_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SM_out";
}

SIGNAL("SM_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SM_out";
}

SIGNAL("SM_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SM_out";
}

SIGNAL("V_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_data";
}

SIGNAL("Write_data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_data";
}

SIGNAL("Write_data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_data";
}

SIGNAL("Write_data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_data";
}

SIGNAL("Write_PC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Write_PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_PC";
}

SIGNAL("Write_PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_PC";
}

SIGNAL("Write_PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_PC";
}

SIGNAL("Write_PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_PC";
}

SIGNAL("Write_PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Write_PC";
}

TRANSITION_LIST("Input[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Input[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Input[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Input[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR_out[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 154.0;
		}
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("IR_out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.5;
		LEVEL 1 FOR 105.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("IR_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 84.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 28.0;
		}
		LEVEL 1 FOR 261.5;
	}
}

TRANSITION_LIST("IR_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.5;
		LEVEL 1 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 154.0;
		}
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 219.5;
	}
}

TRANSITION_LIST("IR_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.5;
		LEVEL 1 FOR 133.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 98.0;
		}
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 219.5;
	}
}

TRANSITION_LIST("IR_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.5;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 261.5;
	}
}

TRANSITION_LIST("IR_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 168.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 387.5;
	}
}

TRANSITION_LIST("IR_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.5;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 28.0;
		}
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("IR_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.5;
		LEVEL 1 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 126.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 261.5;
	}
}

TRANSITION_LIST("IR_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 98.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 289.5;
	}
}

TRANSITION_LIST("IR_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 98.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 168.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 359.5;
	}
}

TRANSITION_LIST("OUTR_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OUTR_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OUTR_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OUTR_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 142;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 3.5;
		}
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("Q")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17.5;
		LEVEL 1 FOR 105.0;
		LEVEL 0 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 154.0;
		}
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("LD_AR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 38.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 905.5;
	}
}

TRANSITION_LIST("LD_Rd")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 63.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 21.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 63.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 268.5;
	}
}

TRANSITION_LIST("R0_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 269.5;
		LEVEL 1 FOR 730.5;
	}
}

TRANSITION_LIST("R0_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 269.5;
		LEVEL 1 FOR 730.5;
	}
}

TRANSITION_LIST("R0_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66.5;
		LEVEL 1 FOR 399.0;
		LEVEL 0 FOR 534.5;
	}
}

TRANSITION_LIST("R0_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 269.5;
		LEVEL 1 FOR 392.0;
		LEVEL 0 FOR 338.5;
	}
}

TRANSITION_LIST("R1_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.5;
		LEVEL 1 FOR 884.5;
	}
}

TRANSITION_LIST("R1_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.5;
		LEVEL 1 FOR 884.5;
	}
}

TRANSITION_LIST("R1_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 409.5;
		LEVEL 1 FOR 590.5;
	}
}

TRANSITION_LIST("R1_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 213.5;
		LEVEL 1 FOR 196.0;
		LEVEL 0 FOR 196.0;
		LEVEL 1 FOR 394.5;
	}
}

TRANSITION_LIST("R2_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 143.5;
		LEVEL 1 FOR 588.0;
		LEVEL 0 FOR 268.5;
	}
}

TRANSITION_LIST("R2_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 143.5;
		LEVEL 1 FOR 588.0;
		LEVEL 0 FOR 268.5;
	}
}

TRANSITION_LIST("R2_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 241.5;
		LEVEL 1 FOR 196.0;
		LEVEL 0 FOR 98.0;
		LEVEL 1 FOR 98.0;
		LEVEL 0 FOR 366.5;
	}
}

TRANSITION_LIST("R2_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 143.5;
		LEVEL 1 FOR 196.0;
		LEVEL 0 FOR 98.0;
		LEVEL 1 FOR 196.0;
		LEVEL 0 FOR 366.5;
	}
}

TRANSITION_LIST("LD_IR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 24.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 7.0;
		}
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 35.0;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 21.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 21.0;
			}
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("LD_PC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 290.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 189.0;
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 63.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 240.5;
	}
}

TRANSITION_LIST("PC_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("PC_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 283.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 182.0;
		}
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 240.5;
	}
}

TRANSITION_LIST("PC_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 157.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 126.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 240.5;
	}
}

TRANSITION_LIST("PC_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.5;
		LEVEL 1 FOR 77.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 56.0;
		}
		LEVEL 0 FOR 254.5;
	}
}

TRANSITION_LIST("PC_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 42.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 28.0;
				LEVEL 0 FOR 42.0;
			}
		}
		LEVEL 1 FOR 212.5;
	}
}

TRANSITION_LIST("S1S2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.5;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 70.0;
			LEVEL 0 FOR 28.0;
		}
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 219.5;
	}
}

TRANSITION_LIST("S1S2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.5;
		LEVEL 1 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 126.0;
			LEVEL 1 FOR 70.0;
		}
		LEVEL 0 FOR 261.5;
	}
}

TRANSITION_LIST("S1S2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 42.0;
			LEVEL 0 FOR 98.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 289.5;
	}
}

TRANSITION_LIST("S1S2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 98.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 168.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 359.5;
	}
}

TRANSITION_LIST("DM_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DM_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.5;
		LEVEL 1 FOR 891.5;
	}
}

TRANSITION_LIST("DM_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.5;
		LEVEL 1 FOR 891.5;
	}
}

TRANSITION_LIST("DM_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 891.5;
	}
}

TRANSITION_LIST("DM_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Rd[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 122.5;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 70.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 261.5;
	}
}

TRANSITION_LIST("Rd[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 73.5;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 70.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 168.0;
		}
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 387.5;
	}
}

TRANSITION_LIST("SC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.5;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 21.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 112.0;
			LEVEL 1 FOR 14.0;
		}
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 226.5;
	}
}

TRANSITION_LIST("SC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 31.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
		}
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 28.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 14.0;
				LEVEL 0 FOR 28.0;
				LEVEL 1 FOR 14.0;
				LEVEL 0 FOR 14.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 14.0;
				LEVEL 0 FOR 14.0;
			}
		}
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 212.5;
	}
}

TRANSITION_LIST("SC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 24.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.0;
				LEVEL 0 FOR 7.0;
			}
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
		}
		NODE
		{
			REPEAT = 48;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
		}
		LEVEL 1 FOR 205.5;
	}
}

TRANSITION_LIST("SM_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SM_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SM_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SM_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SM_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("V_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 248.5;
		LEVEL 1 FOR 77.0;
		LEVEL 0 FOR 98.0;
		LEVEL 1 FOR 98.0;
		LEVEL 0 FOR 98.0;
		LEVEL 1 FOR 168.0;
		LEVEL 0 FOR 212.5;
	}
}

TRANSITION_LIST("Write_data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 154.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 331.5;
	}
}

TRANSITION_LIST("Write_data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 49.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 154.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 331.5;
	}
}

TRANSITION_LIST("Write_data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 126.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 98.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 394.5;
	}
}

TRANSITION_LIST("Write_data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66.5;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 119.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 49.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 331.5;
	}
}

TRANSITION_LIST("Write_PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Write_PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 752.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 240.5;
	}
}

TRANSITION_LIST("Write_PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Write_PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 290.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 189.0;
		}
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 310.5;
	}
}

TRANSITION_LIST("Write_PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Input";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "Input[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Input[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "SC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "SC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "SC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "IR_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "OUTR_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "OUTR_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "OUTR_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "OUTR_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "OUTR_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "PC_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S1S2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "S1S2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "S1S2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "S1S2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "S1S2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "Rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
	CHILDREN = 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "Rd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "Rd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "Write_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "Write_data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "Write_data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "Write_data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "Write_data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "Write_PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "LD_AR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LD_Rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LD_IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LD_PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "R0_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "R0_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "R0_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "R0_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "R0_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "R1_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "R1_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "R1_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "R1_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "R1_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "R2_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "R2_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "R2_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "R2_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "R2_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77, 78;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "DM_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
	CHILDREN = 80, 81, 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "SM_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 79;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
